ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	NMI_Handler
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	NMI_Handler:
  26              	.LFB37:
  27              		.file 1 "Core/Src/stm32f0xx_it.c"
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****   * @attention
   8:Core/Src/stm32f0xx_it.c ****   *
   9:Core/Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_it.c ****   *
  12:Core/Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f0xx_it.c ****   *
  17:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f0xx_it.c ****   */
  19:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_it.c **** 
  21:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_it.c **** #include "main.h"
  23:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** 
  31:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 2


  32:Core/Src/stm32f0xx_it.c **** 
  33:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f0xx_it.c ****  
  36:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f0xx_it.c **** 
  38:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f0xx_it.c **** 
  41:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f0xx_it.c **** 
  43:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f0xx_it.c **** 
  46:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f0xx_it.c **** 
  48:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f0xx_it.c **** 
  51:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f0xx_it.c **** 
  53:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f0xx_it.c **** 
  56:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f0xx_it.c **** 
  58:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  60:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  61:Core/Src/stm32f0xx_it.c **** extern SPI_HandleTypeDef hspi1;
  62:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim14;
  63:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f0xx_it.c **** 
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  70:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f0xx_it.c **** /**
  72:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f0xx_it.c ****   */
  74:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f0xx_it.c **** {
  28              		.loc 1 75 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c **** 
  78:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f0xx_it.c **** 
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  33              		.loc 1 82 1 view .LVU1
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 3


  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE37:
  39 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.p2align 2,,3
  42              		.global	HardFault_Handler
  43              		.syntax unified
  44              		.code	16
  45              		.thumb_func
  46              		.fpu softvfp
  48              	HardFault_Handler:
  49              	.LFB38:
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****   */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  58              		.loc 1 96 3 discriminator 1 view .LVU4
  59 0000 FEE7     		b	.L4
  60              		.cfi_endproc
  61              	.LFE38:
  63 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  64              		.align	1
  65              		.p2align 2,,3
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	SVC_Handler:
  73              	.LFB47:
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 4


  81              	.LFE47:
  83 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	PendSV_Handler:
  93              	.LFB49:
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              		@ sp needed
  99 0000 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE49:
 103 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
 104              		.align	1
 105              		.p2align 2,,3
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	SysTick_Handler:
 113              	.LFB41:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Core/Src/stm32f0xx_it.c ****   */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
 103:Core/Src/stm32f0xx_it.c **** {
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****   */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
 124:Core/Src/stm32f0xx_it.c **** 
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 5


 125:Core/Src/stm32f0xx_it.c **** /**
 126:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 127:Core/Src/stm32f0xx_it.c ****   */
 128:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 129:Core/Src/stm32f0xx_it.c **** {
 114              		.loc 1 129 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 118              		.loc 1 133 3 view .LVU6
 129:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 119              		.loc 1 129 1 is_stmt 0 view .LVU7
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI0:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              		.loc 1 133 3 view .LVU8
 126 0002 FFF7FEFF 		bl	HAL_IncTick
 127              	.LVL0:
 134:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Core/Src/stm32f0xx_it.c **** 
 136:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 137:Core/Src/stm32f0xx_it.c **** }
 128              		.loc 1 137 1 view .LVU9
 129              		@ sp needed
 130 0006 10BD     		pop	{r4, pc}
 131              		.cfi_endproc
 132              	.LFE41:
 134              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 135              		.align	1
 136              		.p2align 2,,3
 137              		.global	DMA1_Channel2_3_IRQHandler
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	DMA1_Channel2_3_IRQHandler:
 144              	.LFB42:
 138:Core/Src/stm32f0xx_it.c **** 
 139:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 140:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 141:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 142:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 143:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 144:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 145:Core/Src/stm32f0xx_it.c **** 
 146:Core/Src/stm32f0xx_it.c **** /**
 147:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 and 3 interrupts.
 148:Core/Src/stm32f0xx_it.c ****   */
 149:Core/Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 150:Core/Src/stm32f0xx_it.c **** {
 145              		.loc 1 150 1 is_stmt 1 view -0
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 6


 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 152:Core/Src/stm32f0xx_it.c **** 
 153:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 154:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 149              		.loc 1 154 3 view .LVU11
 150:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 150              		.loc 1 150 1 is_stmt 0 view .LVU12
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 156              		.loc 1 154 3 view .LVU13
 157 0002 0348     		ldr	r0, .L9
 158 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 159              	.LVL1:
 155:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 160              		.loc 1 155 3 is_stmt 1 view .LVU14
 161 0008 0248     		ldr	r0, .L9+4
 162 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 163              	.LVL2:
 156:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 157:Core/Src/stm32f0xx_it.c **** 
 158:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 159:Core/Src/stm32f0xx_it.c **** }
 164              		.loc 1 159 1 is_stmt 0 view .LVU15
 165              		@ sp needed
 166 000e 10BD     		pop	{r4, pc}
 167              	.L10:
 168              		.align	2
 169              	.L9:
 170 0010 00000000 		.word	hdma_spi1_rx
 171 0014 00000000 		.word	hdma_i2c1_rx
 172              		.cfi_endproc
 173              	.LFE42:
 175              		.section	.text.DMA1_Channel4_5_IRQHandler,"ax",%progbits
 176              		.align	1
 177              		.p2align 2,,3
 178              		.global	DMA1_Channel4_5_IRQHandler
 179              		.syntax unified
 180              		.code	16
 181              		.thumb_func
 182              		.fpu softvfp
 184              	DMA1_Channel4_5_IRQHandler:
 185              	.LFB43:
 160:Core/Src/stm32f0xx_it.c **** 
 161:Core/Src/stm32f0xx_it.c **** /**
 162:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 4 and 5 interrupts.
 163:Core/Src/stm32f0xx_it.c ****   */
 164:Core/Src/stm32f0xx_it.c **** void DMA1_Channel4_5_IRQHandler(void)
 165:Core/Src/stm32f0xx_it.c **** {
 186              		.loc 1 165 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 7


 189              		@ frame_needed = 0, uses_anonymous_args = 0
 166:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 167:Core/Src/stm32f0xx_it.c **** 
 168:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 0 */
 169:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 190              		.loc 1 169 3 view .LVU17
 165:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 191              		.loc 1 165 1 is_stmt 0 view .LVU18
 192 0000 10B5     		push	{r4, lr}
 193              	.LCFI2:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 4, -8
 196              		.cfi_offset 14, -4
 197              		.loc 1 169 3 view .LVU19
 198 0002 0248     		ldr	r0, .L12
 199 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 200              	.LVL3:
 170:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */
 171:Core/Src/stm32f0xx_it.c **** 
 172:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 1 */
 173:Core/Src/stm32f0xx_it.c **** }
 201              		.loc 1 173 1 view .LVU20
 202              		@ sp needed
 203 0008 10BD     		pop	{r4, pc}
 204              	.L13:
 205 000a C046     		.align	2
 206              	.L12:
 207 000c 00000000 		.word	hdma_usart2_rx
 208              		.cfi_endproc
 209              	.LFE43:
 211              		.section	.text.TIM14_IRQHandler,"ax",%progbits
 212              		.align	1
 213              		.p2align 2,,3
 214              		.global	TIM14_IRQHandler
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	TIM14_IRQHandler:
 221              	.LFB44:
 174:Core/Src/stm32f0xx_it.c **** 
 175:Core/Src/stm32f0xx_it.c **** /**
 176:Core/Src/stm32f0xx_it.c ****   * @brief This function handles TIM14 global interrupt.
 177:Core/Src/stm32f0xx_it.c ****   */
 178:Core/Src/stm32f0xx_it.c **** void TIM14_IRQHandler(void)
 179:Core/Src/stm32f0xx_it.c **** {
 222              		.loc 1 179 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM14_IRQn 0 */
 181:Core/Src/stm32f0xx_it.c **** 
 182:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM14_IRQn 0 */
 183:Core/Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 226              		.loc 1 183 3 view .LVU22
 179:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM14_IRQn 0 */
 227              		.loc 1 179 1 is_stmt 0 view .LVU23
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 8


 228 0000 10B5     		push	{r4, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233              		.loc 1 183 3 view .LVU24
 234 0002 0248     		ldr	r0, .L15
 235 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 236              	.LVL4:
 184:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM14_IRQn 1 */
 185:Core/Src/stm32f0xx_it.c **** 
 186:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM14_IRQn 1 */
 187:Core/Src/stm32f0xx_it.c **** }
 237              		.loc 1 187 1 view .LVU25
 238              		@ sp needed
 239 0008 10BD     		pop	{r4, pc}
 240              	.L16:
 241 000a C046     		.align	2
 242              	.L15:
 243 000c 00000000 		.word	htim14
 244              		.cfi_endproc
 245              	.LFE44:
 247              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.p2align 2,,3
 250              		.global	SPI1_IRQHandler
 251              		.syntax unified
 252              		.code	16
 253              		.thumb_func
 254              		.fpu softvfp
 256              	SPI1_IRQHandler:
 257              	.LFB45:
 188:Core/Src/stm32f0xx_it.c **** 
 189:Core/Src/stm32f0xx_it.c **** /**
 190:Core/Src/stm32f0xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 191:Core/Src/stm32f0xx_it.c ****   */
 192:Core/Src/stm32f0xx_it.c **** void SPI1_IRQHandler(void)
 193:Core/Src/stm32f0xx_it.c **** {
 258              		.loc 1 193 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 195:Core/Src/stm32f0xx_it.c **** 
 196:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 197:Core/Src/stm32f0xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 262              		.loc 1 197 3 view .LVU27
 193:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 263              		.loc 1 193 1 is_stmt 0 view .LVU28
 264 0000 10B5     		push	{r4, lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 269              		.loc 1 197 3 view .LVU29
 270 0002 0248     		ldr	r0, .L18
 271 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 9


 272              	.LVL5:
 198:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 199:Core/Src/stm32f0xx_it.c **** 
 200:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 201:Core/Src/stm32f0xx_it.c **** }
 273              		.loc 1 201 1 view .LVU30
 274              		@ sp needed
 275 0008 10BD     		pop	{r4, pc}
 276              	.L19:
 277 000a C046     		.align	2
 278              	.L18:
 279 000c 00000000 		.word	hspi1
 280              		.cfi_endproc
 281              	.LFE45:
 283              		.text
 284              	.Letext0:
 285              		.file 2 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/arm-none-eabi/include/machine/_default_type
 286              		.file 3 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 287              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 288              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030xc.h"
 289              		.file 6 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 290              		.file 7 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 291              		.file 8 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.
 292              		.file 9 "/usr/local/Cellar/arm-gcc-bin/8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 293              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 294              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 295              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 296              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 297              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:40     .text.HardFault_Handler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:64     .text.SVC_Handler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:72     .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:84     .text.PendSV_Handler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:92     .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:104    .text.SysTick_Handler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:112    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:135    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:143    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 DMA1_Channel2_3_IRQHandler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:170    .text.DMA1_Channel2_3_IRQHandler:0000000000000010 $d
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:176    .text.DMA1_Channel4_5_IRQHandler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:184    .text.DMA1_Channel4_5_IRQHandler:0000000000000000 DMA1_Channel4_5_IRQHandler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:207    .text.DMA1_Channel4_5_IRQHandler:000000000000000c $d
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:212    .text.TIM14_IRQHandler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:220    .text.TIM14_IRQHandler:0000000000000000 TIM14_IRQHandler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:243    .text.TIM14_IRQHandler:000000000000000c $d
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:248    .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:256    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/vr/85797ndx6jd_r3n_lsprlrj40000gn/T//cca4Nrnx.s:279    .text.SPI1_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi1_rx
hdma_i2c1_rx
hdma_usart2_rx
HAL_TIM_IRQHandler
htim14
HAL_SPI_IRQHandler
hspi1
